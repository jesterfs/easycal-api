
DROP TABLE IF EXISTS member_events;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS members;
DROP TABLE IF EXISTS calendars;

CREATE TABLE calendars (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name TEXT NOT NULL,
  owner TEXT NOT NULL
  
);

CREATE TABLE members (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name TEXT NOT NULL,
  email TEXT NOT NULL,
  password TEXT
  -- calendar_id INTEGER REFERENCES calendars(id) ON DELETE CASCADE NOT NULL
);
 

-- Member Calender member id and cal id

CREATE TABLE member_calenders (
  member_id INTEGER REFERENCES members(id) ON DELETE CASCADE NOT NULL,
  
  calendar_id INTEGER REFERENCES calendars(id) ON DELETE CASCADE NOT NULL,
  unique (member_id, calendar_id)
);
 
CREATE TABLE events (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name TEXT NOT NULL,
    -- date TIMESTAMPTZ NOT NULL,
    start_time TIMESTAMPTZ NOT NULL,
    end_time TIMESTAMPTZ NOT NULL,
    start TEXT NOT NULL,
    end TEXT NOT NULL,
    calendar_id INTEGER REFERENCES calendars(id) ON DELETE CASCADE NOT NULL,
    owner_id INTEGER REFERENCES members(id) ON DELETE CASCADE NOT NULL

  );



CREATE TABLE member_events (
  member_id INTEGER REFERENCES members(id) ON DELETE CASCADE NOT NULL,
  
  event_id INTEGER REFERENCES events(id) ON DELETE CASCADE NOT NULL,
  unique (member_id, event_id)


);
